
[{"content":"","date":"2025-08-14","externalUrl":null,"permalink":"/categories/audio/","section":"Categories","summary":"","title":"Audio","type":"categories"},{"content":"","date":"2025-08-14","externalUrl":null,"permalink":"/","section":"beforethesurge","summary":"","title":"beforethesurge","type":"page"},{"content":"","date":"2025-08-14","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"I have ran into several issues with crackling/popping noises with pipewire for a while\nFound a way online on how to mask it in favor of using pulseaudio (which still isn\u0026rsquo;t dead yet, because it just works)\nsystemctl --user mask pipewire.service pipewire.socket wireplumber.service pipewire-pulse.service pipewire-pulse.socket wireplumber.service systemctl --user unmask pulseaudio pulseaudio.service pulseaudio.socket If the above does not work, make sure the following packages are installed:\nsudo apt install pulseaudio-module-bluetooth pulseaudio-utils pavucontrol If you wish to revert the changes made in the first command, you can simply run the inverse below:\nsystemctl --user unmask pipewire.service pipewire.socket wireplumber.service pipewire-pulse.service pipewire-pulse.socket wireplumber.service systemctl --user mask pulseaudio pulseaudio.service pulseaudio.socket ","date":"2025-08-14","externalUrl":null,"permalink":"/docs/pulseaudio-from-pipewire/","section":"Docs","summary":"","title":"Disable Pipewire in Favor of Pulseaudio","type":"docs"},{"content":"","date":"2025-08-14","externalUrl":null,"permalink":"/docs/","section":"Docs","summary":"","title":"Docs","type":"docs"},{"content":"","date":"2025-06-26","externalUrl":null,"permalink":"/categories/rcs/","section":"Categories","summary":"","title":"RCs","type":"categories"},{"content":"Stored in ~/.config/fish/config.fish\nset -U fish_greeting \u0026#34;\u0026#34; builtin history clear ","date":"2025-06-26","externalUrl":null,"permalink":"/docs/rc-fishrc/","section":"Docs","summary":"","title":"RCs - fish","type":"docs"},{"content":"","date":"2025-06-05","externalUrl":null,"permalink":"/categories/kali/","section":"Categories","summary":"","title":"Kali","type":"categories"},{"content":" Fix Archive Keyring Change Errors # Occasionally happens whenever Kali has a major update, you\u0026rsquo;ll see some kind of error that about a keyring being outdated or wrong\nCan run the below and it should fix the problem:\nwget \u0026#34;https://archive.kali.org/archive-keyring.gpg\u0026#34; \u0026amp;\u0026amp; sudo mv /usr/share/keyrings/kali-archive-keyring.gpg \u0026amp;\u0026amp; sudo apt update Note: Guides online (even from Kali) will point that you should run wget with sudo. This is HIGHLY NOT RECOMMENDED as you should not expose root permissions to the outside if at all possible (this could be that they just haven\u0026rsquo;t updated their forums in a while)\nSources # A New Kali Linux Archive Signing Key\n","date":"2025-06-05","externalUrl":null,"permalink":"/docs/linux-kali/","section":"Docs","summary":"","title":"Kali - Fix Archive Keyring Change","type":"docs"},{"content":"","date":"2025-06-05","externalUrl":null,"permalink":"/categories/linux/","section":"Categories","summary":"","title":"Linux","type":"categories"},{"content":"This is more of personal preference as I don\u0026rsquo;t like the performance of snap, and most applications I need can be found in flatpak/flathub.\nRemove currently installed snap packages (user-input required, as wildcard won\u0026rsquo;t work and will throw errors):\nsnap list sudo snap remove \u0026lt;package-name\u0026gt; Once you\u0026rsquo;re done removing all packages, remove snap files from apt and halt it from ever being installed as a dependency of another package: sudo apt autoremove --purge snapd sudo apt-mark hold snapd Sources # How to remove snapd from Ubuntu\n","date":"2025-06-05","externalUrl":null,"permalink":"/docs/linux-remove-snap/","section":"Docs","summary":"","title":"Linux - Remove Snap","type":"docs"},{"content":"","date":"2025-02-06","externalUrl":null,"permalink":"/categories/powershell/","section":"Categories","summary":"","title":"PowerShell","type":"categories"},{"content":"Get-ExecutionPolicy -List Lists current ExecutionPolicy settings Set-ExecutionPolicy Undefined -Scope LocalMachine Sets ExecutionPolicy to Undefined Policies # AllSigned # Scripts can run. Requires that all scripts and configuration files be signed by a trusted publisher, including scripts that you write on the local computer. Prompts you before running scripts from publishers that you haven\u0026rsquo;t yet classified as trusted or untrusted. Risks running signed, but malicious, scripts. Bypass # Nothing is blocked and there are no warnings or prompts. This execution policy is designed for configurations in which a PowerShell script is built into a larger application or for configurations in which PowerShell is the foundation for a program that has its own security model. Default # Sets the default execution policy. Restricted for Windows clients. RemoteSigned for Windows servers. RemoteSigned # The default execution policy for Windows server computers. Scripts can run. Requires a digital signature from a trusted publisher on scripts and configuration files that are downloaded from the internet which includes email and instant messaging programs. Doesn\u0026rsquo;t require digital signatures on scripts that are written on the local computer and not downloaded from the internet. Runs scripts that are downloaded from the internet and not signed, if the scripts are unblocked, such as by using the Unblock-File cmdlet. Risks running unsigned scripts from sources other than the internet and signed scripts that could be malicious. Restricted # The default execution policy for Windows client computers. Permits individual commands, but does not allow scripts. Prevents running of all script files, including formatting and configuration files (.ps1xml), module script files (.psm1), and PowerShell profiles (.ps1). Undefined # There is no execution policy set in the current scope. If the execution policy in all scopes is Undefined, the effective execution policy is Restricted for Windows clients and RemoteSigned for Windows Server. Unrestricted # The default execution policy for non-Windows computers and cannot be changed. Unsigned scripts can run. There is a risk of running malicious scripts. Warns the user before running scripts and configuration files that are not from the local intranet zone. Scope # MachinePolicy # Set by a Group Policy for all users of the computer UserPolicy # Set by a Group Policy for the current user of the computer Process # Affects only the current PowerShell session Saved in $env:PSExecutionPolicyPreference, rather than registry LocalMachine # Default scope that affects all users of the computer Written to registry hive HKEY_LOCAL_MACHINE CurrentUser # Affects only the current user Written to registry hive HKEY_LOCAL_USER Sources # Set-ExecutionPolicy | Microsoft Learn\n","date":"2025-02-06","externalUrl":null,"permalink":"/docs/commands-powershell-script-execution/","section":"Docs","summary":"","title":"Powershell - Get/Set-ExecutionPolicy","type":"docs"},{"content":" Used for Directory Searching Websites # Includes:\nExcluded HTTP Error Codes Extension File (will need to point this to one you have) Output File Proxy (BurpSuite) feroxbuster -u http://X.X.X.X -C 400,404,500,502,503 -o dir.txt --proxy \u0026#34;http://127.0.0.1:8080\u0026#34; ","date":"2024-10-17","externalUrl":null,"permalink":"/docs/feroxbuster/","section":"Docs","summary":"","title":"Feroxbuster","type":"docs"},{"content":"","date":"2024-10-17","externalUrl":null,"permalink":"/categories/recon/","section":"Categories","summary":"","title":"Recon","type":"categories"},{"content":"","date":"2024-09-17","externalUrl":null,"permalink":"/categories/networking/","section":"Categories","summary":"","title":"Networking","type":"categories"},{"content":" Basic Network Troubleshooting for Workstation/Server # Note If troubleshooting on server, MAKE SURE YOU HAVE PERMISSION TO REBOOT BEFORE DOING SO (could cause issues with others users being logged into it on RDP and breaking their session or causing them to lose data from a reboot)\nCheck Physical Connections\nEnsure all cables are securely connected. Verify that the network devices (router, modem, switches) are powered on. Restart Devices\nRestart the computer. If multiple devices Restart the router and modem by unplugging them for 30 seconds and then plugging them back in. Check Network Settings\nEnsure the computer is connected to the correct network. Verify that the computer\u0026rsquo;s IP settings are set to obtain an IP address automatically (DHCP). If set to static, ensure IP is specified and is correct for workstation/server Run Network Diagnostics\nOn Windows 11: Go to Settings \u0026gt; System \u0026gt; Status \u0026gt; Troubleshoot \u0026gt; Other Troubleshooters \u0026gt; Network and Internet. On macOS: Go to System Preferences \u0026gt; Network \u0026gt; Assist me \u0026gt; Diagnostics. Check for IP Address Conflicts\nOpen Command Prompt (Windows) or Terminal (macOS/Linux). Type ipconfig (Windows) or ifconfig (macOS/Linux) to check the IP address. Ensure no other device on the network has the same IP address. Reference IPConfig for renewing IP for testing Update Network Drivers\nOn Windows: Go to Device Manager \u0026gt; Network adapters \u0026gt; Right-click the network adapter \u0026gt; Update driver. On macOS: Ensure the system is up to date by going to System Preferences \u0026gt; Software Update. Disable/Enable Network Adapter\nOn Windows: Go to Control Panel \u0026gt; Network and Sharing Center \u0026gt; Change adapter settings \u0026gt; Right-click the network adapter \u0026gt; Disable. Wait a few seconds, then right-click again and select Enable. On macOS: Go to System Preferences \u0026gt; Network \u0026gt; Select the network adapter \u0026gt; Click the - button to remove it, then click the + button to add it back. Check for Interference\nEnsure there are no physical obstructions or electronic devices causing interference with the Wi-Fi signal. Next step may be a bit more advanced as this is more dealing with 2.4 GHz and 5 GHz frequencies (feel free to skip) Try changing the Wi-Fi channel on the device (Most networks will have a clear distinction for which channel they belong to). Example: Secure (5 GHz), Guest (2.4 GHz); On the SSID could be a clear 2.4 GHz or a \u0026ldquo;-5\u0026rdquo; after the name for 5 GHz Note, this may sometimes not be the case, but is common Contact ISP\nIf all else fails, contact the Internet Service Provider (ISP) to check for outages or issues on their end. Bear in mind, these are general tips, not absolutes (be willing to stray off from the exact steps and think outside the box, but it\u0026rsquo;s a good start) # ","date":"2024-09-17","externalUrl":null,"permalink":"/docs/network-troubleshooting/","section":"Docs","summary":"","title":"Networking - Troubleshooting","type":"docs"},{"content":" Disable Windows Commands through WSL Distro # Create the following file if not already created:\nsudo nano /etc/wsl.conf Add the following to wsl.conf:\n[interop] enabled = false appendWindowsPath = false Restart WSL Distro\nwsl --shutdown Allow Network Tools (Ping) # sudo setcap cap_net_raw+p /bin/ping Or you can use:\nsudo chmod u+s /bin/ping ","date":"2024-08-30","externalUrl":null,"permalink":"/docs/windows11-wsl/","section":"Docs","summary":"","title":"Windows 11 - WSL","type":"docs"},{"content":"","date":"2024-08-30","externalUrl":null,"permalink":"/categories/wsl/","section":"Categories","summary":"","title":"WSL","type":"categories"},{"content":"","date":"2024-08-22","externalUrl":null,"permalink":"/categories/bash/","section":"Categories","summary":"","title":"Bash","type":"categories"},{"content":" Add i386 Architecture for steam-installer (If required) # sudo dpkg --add-architecture i386 Note: Make sure you update after change. This also needs to have contrib repo added to /etc/apt/sources.list (can also add non-free). Redshift (Screen Dim) # redshift -O 3500K -r -P Install QRedshift to avoid this issue if applicable. Enable Virtual Network for virt-manager # sudo virsh net-start default Reboot/Shutdown Systemd Commands # Reboot # systemctl restart Shutdown # systemctl poweroff Pull Systems Information # LANG=C inxi -Fxxxrzc0 --usb Find errors with journalctl # journalctl -p err Change Shell # chsh -s $(which zsh) Verify:\necho $SHELL Create Symlink File # ln -s PATHTOFILETOLINK PATHTOSAVELINK Tar Decompression # tar -xzvf archive.tar.gz -C PATHTODIRECTORY Chaining Grep # grep -e bash -e rc Works like an AND/OR search Finds folders/files that have \u0026ldquo;bash\u0026rdquo;, \u0026ldquo;rc\u0026rdquo; and \u0026ldquo;bashrc\u0026rdquo; in it Check Current Running Connections (at current time [will not update unless ran again]) # netstat -ano | grep \u0026#34;443\u0026#34; ","date":"2024-08-22","externalUrl":null,"permalink":"/docs/commands-bash/","section":"Docs","summary":"","title":"Commands (Bash)","type":"docs"},{"content":" Enable/Disable Debugging # Command Description diagnose debug reset Stop all the prior debugs that were enabled and running in the foreground or background. diagnose debug enable Start printing debugs in the console. diagnose debug disable Stop printing debugs in the console. The debugs are still running in the background; use diagnose debug reset to completely stop them. diagnose debug duration 0 Start debugging for infinite duration. By default, debug is set for 30 minutes. System # System # Command Description get system status Show system information. execute time Show current system time. get system performance status Show CPU and memory utilization. execute tac report Execute TAC report used to open a support ticket with Fortinet Support. diagnose sys top {s} {n} {i} Show a list of the first n processes every s seconds for i iterations. Shift +C Sort by highest CPU Shift + M Sort by highest memory diagnose debug crashlog read Show system and application crashes. diagnose sys process pidof \u0026lt;daemon\u0026gt; Show PID of the daemon that is running. The names of currently running daemons can be found using diagnose sys top. diagnose sys kill 11 \u0026lt;pid\u0026gt; Kill the PID with signal 11. diagnose sys session stat Show session statistics. diagnose sys session exp-stat Show expectation session statistics. diagnose sys vd list Show virtual domain information and system statistics. diagnose sys cmdb info Show information about the latest configuration change performed by the daemon. execute factoryreset [keepvmlicense] Immediately reset to factory defaults and reboot. If keepvmlicense is specified (VM models only), the VM license is retained after reset. execute factoryreset-shutdown [keepvmlicense] Immediately reset to factory defaults and shutdown. If keepvmlicense is specified (VM models only), the VM license is retained after reset. execute factoryreset2 [keepvmlicense] Reset to factory default, except system settings, system interfaces, VDOMs, static routes, and virtual switches. If keepvmlicense is specified (VM models only), the VM license is retained after reset. diagnose debug config-error-log read Show errors in the configuration file. diagnose snmp ip frags Show fragmentation and reassembly information. diagnose sys process dump \u0026lt;PID\u0026gt; Show essential process related information for a particular process PID. diagnose sys process pstack \u0026lt;PID\u0026gt; Show essential process related information for a particular process PID. diagnose sys process trace \u0026lt;PID\u0026gt; Show essential process related information for a particular process PID. diagnose sys mpstat {n} Show CPU usage every n seconds. diagnose hardware sysinfo memory Show system memory information. diagnose firewall packet distribution Show packet distribution statistics. execute reboot Reboot the device. Hardware # Command Description diagnose hardware sysinfo interrupts Show hardware interrupts statistics. diagnose hardware test suite all Execute a hardware diagnostic test, also known as an HQIP test. diagnose hardware deviceinfo disk Show disk information. diagnose sys flash list Show flash partitions. execute disk list Show available mounted disks. execute disk format \u0026lt;partition ref\u0026gt; Format the referenced partition. diagnose disktest device \u0026lt;device\u0026gt; Execute a disk check to check if disk is faulty. diagnose disktest block \u0026lt;block\u0026gt; Execute a disk check to check if disk is faulty. diagnose disktest size \u0026lt;mb\u0026gt; Execute a disk check to check if disk is faulty. diagnose disk test run Execute a disk check to check if disk is faulty. execute formatlogdisk Format the log disk. diagnose hardware sysinfo cpu Show CPU information. diagnose sys modem detect Detect the modem and start real-time debugging of the modem daemon. diagnose debug application modemd -1 Start real-time debugging of the modem daemon. diagnose debug enable Start real-time debugging of the modem daemon. FortiGuard # Command Description diagnose webfilter fortiguard statistics Show rating cache and daemon statistics. diagnose debug rating Show web filter rating server information. diagnose debug application update -1 Start debugging for updated daemon to troubleshoot FortiGuard update issues. diagnose debug enable Start debugging for updated daemon to troubleshoot FortiGuard update issues. execute update-now Execute the FortiGuard update manually. diagnose autoupdate status Show license information. diagnose autoupdate versions Show license information. Session table # Command Description diagnose sys session filter \u0026lt;filter\u0026gt; Set session table filters. diagnose sys session filter Show session filters, if set. diagnose sys session list Show session table after filtering. diagnose sys session clear Clear the session table for the specified filter. diagnose firewall iprope list Show FortiGate’s internal firewall table. Network Diagnostics # Command Description execute ping-options {options} Ping IP address \u0026lt;x.x.x.x\u0026gt; using the specified options. execute ping \u0026lt;x.x.x.x\u0026gt; Ping IP address \u0026lt;x.x.x.x\u0026gt; using the specified options. execute ssh-options {options} SSH to IP address \u0026lt;x.x.x.x\u0026gt; using the specified options. execute ssh \u0026lt;x.x.x.x\u0026gt; SSH to IP address \u0026lt;x.x.x.x\u0026gt; using the specified options. execute traceroute-options {options} Traceroute IP address \u0026lt;x.x.x.x\u0026gt; using the specified options. execute traceroute \u0026lt;x.x.x.x\u0026gt; Traceroute IP address \u0026lt;x.x.x.x\u0026gt; using the specified options. get system arp Show ARP entries. diagnose ip arp list Show ARP entries. diagnose netlink brctl list Show the names of all of the switches on the FortiGate. diagnose netlink brctl name host \u0026lt;switch-name\u0026gt; Show the switching table of the specified switch. get system interface Show a summary of interface details, including IP address information. get sys interface physical Show a summary of interface details, including IP address information. diagnose ip address list Show IP address information. diagnose hardware deviceinfo nic \u0026lt;interface\u0026gt; Show detailed interface information. get hardware nic \u0026lt;interface\u0026gt; Show detailed interface information. get sys interface transceiver Show connected transceivers. Packet Sniffer # Command Description diagnose sniffer packet \u0026lt;interface\u0026gt; \u0026lt;'filter'\u0026gt; \u0026lt;verbose\u0026gt; \u0026lt;count\u0026gt; \u0026lt;a|l\u0026gt; Execute the inbuilt packet sniffer, filtered on a particular interface with the specified filter. For more information, see Performing a sniffer trace or packet capture. Debug Flow # Command Description diagnose debug reset Stop all the prior debugs that were enabled and running in the foreground or background. diagnose debug flow filter clear Clear any IPv4 debug flow filters. diagnose debug flow filter6 clear Clear any IPv6 debug flow filters. diagnose debug flow filter \u0026lt;filter\u0026gt; Set a filter for running IPv4 traffic debug flows. diagnose debug flow filter6 \u0026lt;filter\u0026gt; Set a filter for running IPv6 traffic debug flows. diagnose debug flow show function-name enable Show the function name of the code that the traffic accesses. diagnose debug flow show iprope enable Show which internal firewall policy that the traffic is going through. diagnose debug console timestamp enable Start printing timestamps on debugs. diagnose debug flow trace start \u0026lt;n\u0026gt; Show n lines of IPv4 debugs. diagnose debug flow trace start6 \u0026lt;n\u0026gt; Show n lines of IPv6 debugs. diagnose debug enable Start printing debugs in the console. UTM # Command Description diagnose debug urlfilter \u0026lt;filter\u0026gt; diagnose debug application urlfilter -1 diagnose debug enable Start real-time debugging for web filter traffic. diagnose debug enable diagnose test application urlfilter List the web filter debug outputs. diagnose test application urlfilter \u0026lt;option\u0026gt; Show the web filter debug output for the specified option. diagnose debug application dnsproxy -1 diagnose debug enable Start real-time debugging for DNS proxy. DNS proxy is responsible for DNS filter, DNS translation, DNS resolution etc. diagnose debug enable diagnose test application dnsproxy List the DNS proxy debug outputs. diagnose test application dnsproxy \u0026lt;option\u0026gt; Show the DNS proxy debug output for the specified option. diagnose ips filter set \u0026quot;host \u0026lt;x.x.x.x\u0026gt; and port \u0026lt;port\u0026gt;\u0026quot; diagnose ips debug enable all diagnose debug enable Start IPS engine debugs for Application Control and IPS Security profile diagnose ips debug enable av diagnose ips debug status show diagnose sys scanunit debug all enable diagnose sys scanunit debug level verbose diagnose sys scanunit debug show diagnose debug enable Start real-time debugging for antivirus profile when antivirus profile is configured in flow mode. diagnose wad debug enable category scan diagnose wad stream-scan av-test \u0026quot;debug enable\u0026quot; diagnose wad stream-scan av-test \u0026quot;debug all:debug\u0026quot; diagnose sys scanunit debug all enable diagnose sys scanunit debug level verbose diagnose sys scanunit debug show diagnose debug enable IPS Engine # Command Description diagnose test application ipsmonitor 1 Show IPS engine information diagnose test application ipsmonitor 2 Set the IPS engine enable/disable status. diagnose test application ipsmonitor 99 Restart all IPS engines and monitor. diagnose test application ipsmonitor 97 Start all IPS engines. diagnose test application ipsmonitor 98 Stop all IPS engines. diagnose ips session list Show the IPS sessions in each engine\u0026rsquo;s memory space. diagnose test application ipsmonitor 13 diagnose ips filter set \u0026quot;host \u0026lt;x.x.x.x\u0026gt; and port \u0026lt;port\u0026gt;\u0026quot; Show IPS engine debugs for the traffic specified by the filter. diagnose ips debug enable all diagnose debug enable WAD # Command Description diagnose test application wad 1000 Show all WAD processes. diagnose test application wad 2 Show total memory usage. diagnose test application wad 99 Restart all WAD processes. diagnose wad debug display pid enable Start real-time debugging of the traffic processed by WAD daemon. diagnose wad filter \u0026lt;filter\u0026gt; diagnose wad filter list diagnose wad debug enable level \u0026lt;level\u0026gt; diagnose wad debug enable category \u0026lt;category\u0026gt; diagnose debug enable diagnose wad filter \u0026lt;filter\u0026gt; Set the filter for the WAD debugs. diagnose wad filter list Show all the filters that have been set for debugging. diagnose wad filter clear Clear the WAD filter settings. diagnose wad debug enable level \u0026lt;level\u0026gt; Set the verbosity level of the debugs. diagnose wad debug enable category \u0026lt;category\u0026gt; Set the traffic category. diagnose wad debug display pid enable Show the WAS worker PID in debugs that handle the session request. diagnose debug enable Start printing debugs in the console. CPU Profiling # Command Description diagnose sys profile cpumask \u0026lt;cpu_id\u0026gt; Set the CPU core to profile. diagnose sys profile start Start CPU profiling and wait for one to two minutes to stop. diagnose sys profile stop Stop CPU profiling. diagnose sys profile module Show the applied kernel modules. diagnose sys profile show detail Show the CPU profiling result for the respective core. diagnose sys profile show order Tree # Command Description tree Show the entire command tree. tree execute Show the execute command tree. tree diagnose Show the diagnose command tree. Routing # IPv4 and IPv6 Routing # Command Description get router info routing-table all Show routing table. get router info routing-table database Show IPv4 and IPv6 routing database information. get router info6 routing-table database diagnose ip route list Show the IPv4 and IPv6 kernel routing table. get router info kernel diagnose ipv6 route list get router info6 kernel get router info protocols Show routing protocol information for IPv4 and IPv6. get router info6 protocols execute router restart Restart the routing daemon get router info ospf status Show OSPF status for IPv4 and IPv6. get router info6 ospf status get router info ospf neighbor Show OSPF neighbors for IPv4 and IPv6. get router info6 ospf neighbor get router info ospf database brief Show OSPF database in brief. get router info bfd neighbor Show BFD neighbors for IPv4 and IPv6. get router info6 bfd neighbor diagnose test application bfd 1 Show BFD statistics. diagnose test application bfd 2 diagnose test application bfd 3 diagnose debug application bfdd \u0026lt;debug level\u0026gt; Start real-time BFD debugging. diagnose debug enable get router info bgp summary Show BGP summary for IPv4 and IPv6. get router info6 bgp summary get router info bgp neighbors Show BGP peer and the advertised and received routes from the BGP peer. get router info6 bgp neighbors get router info bgp neighbors \u0026lt;x.x.x.x\u0026gt; advertised-routes - Substitute \u0026lt;x.x.x.x\u0026gt; with IPv4 address of the peer. get router info6 bgp neighbors \u0026lt;x:x::x:x/m\u0026gt; advertised-routes - Substitute \u0026lt;x\u0026#x274c;\u0026#x274c;x/m\u0026gt; with IPv6 address of the peer. get router info bgp neighbors \u0026lt;x.x.x.x\u0026gt; received-routes get router info6 bgp neighbors \u0026lt;x:x::x:x/m\u0026gt; received-routes get router info bgp neighbors \u0026lt;x.x.x.x\u0026gt; routes get router info6 bgp neighbors \u0026lt;x:x::x:x/m\u0026gt; routes diagnose ip router bgp all enable Start real-time BGP debugging. diagnose ip router bgp level info diagnose debug enable execute router clear bgp {all | as \u0026lt;ASN\u0026gt; | ip x.x.x.x | ipv6 y:y:y:y:y:y:y:y} Execute a hard reset based on the specified parameters: - all: all BGP peers - as : BGP peers specified by AS number - ip x.x.x.x: BGP peer specified by IPv4 address (x.x.x.x) - ipv6 y:y:y:y:y:y:y:y: BGP peer specified by IPv6 address (y:y:y:y:y:y:y:y) execute router clear bgp {all | ip x.x.x.x | ipv6 y:y:y:y:y:y:y:y} soft {in|out} Executes soft reset based on the specified parameter: - all: all BGP peers - ip x.x.x.x: BGP peer specified by IPv4 address (x.x.x.x) - ipv6 y:y:y:y:y:y:y:y: BGP peer specified by IPv6 address (y:y:y:y:y:y:y:y) - in: received BGP routes only - out: advertised BGP routes only - A soft reset will occur in both directions if neither in nor out is specified. get router info ospf status Show OSPF status for IPv4 and IPv6. get router info6 ospf status get router info ospf interface Show OSPF running on interface for IPv4 and IPv6. get router info6 ospf interface get router info ospf neighbor all Show OSFP neighbor information for IPv4 and IPv6. get router info6 ospf neighbor all get router info ospf database brief Show OSPF database in brief for IPv4 and IPv6. get router info6 ospf database brief diagnose ip router ospf all enable Start real-time OSPF debugging. diagnose ip router ospf level info diagnose debug enable Multicast Routing # Command Description get router info multicast igmp interface Show IGMP statistics for an interface. get router info multicast igmp groups Show multicast groups subscribed to with IGMP. diagnose ip multicast get-igmp-limit Show maximum IGMP states. diagnose ip router igmp decode enable Start real-time debugging of IGMP daemon. diagnose ip router igmp level info diagnose debug console timestamp enable diagnose debug enable execute mrouter clear igmp-interface \u0026lt;interface\u0026gt; Clear all IGMP entries from one interface. execute mrouter clear igmp-group \u0026lt;group-address\u0026gt; Clear all IGMP entries for one or all groups. get router info multicast pim sparse-mode \u0026lt;interface\u0026gt; Show sparse-mode interface information. get router info multicast pim sparse-mode \u0026lt;neighbor\u0026gt; Show sparse-mode neighbor information. get router info multicast pim sparse-mode rp-mapping Show RP to group mapping information. get router info multicast pim sparse-mode table Show sparse-mode routing table. diagnose ip router pim-sm events enable Start real-time debugging of PIM sparse mode. diagnose ip router pim-sm all enable diagnose ip router pim-sm level info diagnose debug enable SD-WAN # Command Description diagnose sys sdwan health-check status Show SD-WAN health check statistics. diagnose sys sdwan service Show SD-WAN rules in control plane. diagnose sys sdwan member Show SD-WAN members. diagnose firewall proute list Show SDWAN rule and policy routes in the data plane. diagnose sys link-monitor status Show link monitoring statistics. diagnose sys link-monitor interface \u0026lt;interface\u0026gt; diagnose debug application link-monitor -1 Start real-time link monitor debugging. diagnose debug enable diagnose test application lnkmtd 1 Show link monitoring statistics. diagnose test application lnkmtd 2 diagnose test application lnkmtd 3 Authentication # Command Description diagnose firewall auth filter \u0026lt;filter\u0026gt; Set the filter used to list entries. diagnose firewall auth list List filtered, authenticated IPv4 users. diagnose wad user list List current users authenticated by proxy (wad daemon). diagnose debug application fnbamd -1 Start real-time debugging for remote and local authentication. diagnose debug application authd -1 diagnose debug enable diagnose test authserver \u0026lt;auth_protocol\u0026gt; \u0026lt;server_name\u0026gt; \u0026lt;user\u0026gt; \u0026lt;password\u0026gt; Test authentication directly from the CLI. Caution: The password is visible in clear text; be careful when capture this command to a log file. diagnose test authserver ldap \u0026lt;server_name\u0026gt; \u0026lt;user\u0026gt; \u0026lt;password\u0026gt; Test user authentication using an LDAP server. Caution: The password is visible in clear text; be careful when capture this command to a log file. diagnose test authserver radius \u0026lt;server_name\u0026gt; \u0026lt;auth_type\u0026gt; \u0026lt;user\u0026gt; \u0026lt;password\u0026gt; Test user authentication using a Radius server. Caution: The password is visible in clear text; be careful when capture this command to a log file. diagnose debug fsso-polling detail Show information about the polls from FortiGate to DC. diagnose debug fsso-polling summary diagnose debug fsso-polling user Show FSSO logged on users when Fortigate polls the DC. diagnose debug authd fsso list diagnose debug application fssod -1 Start real-time debugging when the FortiGate is used for FSSO polling. diagnose debug application smbcd -1 diagnose debug enable diagnose debug fsso-polling refresh-user Refresh the current logged on FSSO users and refresh the list. Caution: This command can cause an outage, use it carefully. execute fsso refresh diagnose debug authd fsso server-status Show current status of connection between FortiGate and the collector agent. diagnose debug application authd 8256 Start real-time debugging for the connection between FortiGate and the collector agent. diagnose debug enable diagnose debug authd fsso refresh-logons Resend the logged-on users list to FortiGate from the collector agent. diagnose debug application authd 8256 Start real-time debugging for the connection between FortiGate and the collector agent. diagnose debug enable diagnose debug application samld -1 Start real-time SAML debugging. diagnose debug enable VPN # IPsec # Command Description diagnose vpn ike gateway list Show IPsec phase 1 information. diagnose vpn tunnel list Show IPsec phase 2 information. get vpn ipsec tunnel summary Show summary and detailed information about IPsec tunnels. get vpn ipsec tunnel details diagnose vpn ipsec status Show information about encryption counters. diagnose vpn ike log filter \u0026lt;filter\u0026gt; Set a filter for IKE daemon debugs. diagnose debug application ike -1 Start real-time debugging of IKE daemon with the filter set. diagnose debug enable diagnose vpn ike restart Restart the IKE process. diagnose vpn ike counts Show other information, such as IKE counts, routes, errors, and statistics. diagnose vpn ike routes diagnose vpn ike errors diagnose vpn ike stats diagnose vpn ike status diagnose vpn ike crypto SSL VPN # Command Description diagnose vpn ssl debug-filter list Show any filters that are set for SSL VPN debug. diagnose vpn ssl debug-filter clear Clear any filters that are set for SSL VPN daemon debug. diagnose vpn ssl debug-filter \u0026lt;filter\u0026gt; Set a filter for SSL VPN debugs. diagnose debug application sslvpn -1 Start SSL VPN debugs for traffic that the filter is applied to. diagnose debug enable diagnose vpn ssl list Show the current SSL VPN sessions for both web and tunnel mode. get vpn ssl monitor execute vpn sslvpn list diagnose vpn ssl statistics Show the SSL VPN statistics. diagnose vpn ssl mux-stat execute vpn sslvpn list Show all SSL VPN web and tunnel mode connections. execute vpn sslvpn del-tunnel Disconnect the users from tunnel mode SSL VPN connection. execute vpn sslvpn del-web Disconnect the users from web mode SSL VPN connection. Managed Devices # Managed FortiSwitches # Command Description diagnose switch-controller switch-info mac-table Show managed FortiSwitch MAC address list. diagnose switch-controller switch-info port-stats Show managed FortiSwitch port statistics. diagnose switch-controller switch-info trunk status Show managed FortiSwitch trunk information. diagnose switch-controller switch-info mclag Show MCLAG related information from FortiSwitch. diagnose switch-controller switch-info poe Show POE-related information. diagnose switch-controller switch-info lldp Show LLDP-related information. diagnose switch-controller switch-info port-properties Show managed FortiSwitch port properties. diagnose switch-controller switch-info acl-counters Show managed FortiSwitch port ACL counters information. diagnose switch-controller switch-info pdu-counters-list Show managed FortiSwitch pdu-counters information. diagnose switch-controller switch-info flapguard Show managed FortiSwitch flapguard information. diagnose switch-controller switch-info qos-stats Show managed FortiSwitch QoS statistics. diagnose switch-controller switch-info modules Show modules related information from FortiSwitch. diagnose switch-controller switch-info stp Show managed FortiSwitch STP instance status. diagnose switch-controller switch-info bpdu-guard-status Show managed FortiSwitch STP BPDU guard status. diagnose switch-controller switch-info igmp-snooping Show managed FortiSwitch IGMP snooping information. diagnose switch-controller switch-info loop-guard Show managed FortiSwitch loop-guard status. diagnose switch-controller switch-info dhcp-snooping Show managed FortiSwitch DHCP snooping interface list. diagnose switch-controller switch-info arp-inspection Show managed FortiSwitch ARP inspection interface list. diagnose switch-controller switch-info option82-mapping Show managed FortiSwitch DHCP option 82 mapping information. diagnose switch-controller switch-info 802.1X Show managed FortiSwitch port 802.1X status. diagnose switch-controller switch-info 802.1X-dacl Show managed FortiSwitch port 802.1X dynamic ACL status. diagnose switch-controller switch-info mac-limit-violations Show managed FortiSwitch violated MACs information. diagnose switch-controller switch-info flow-tracking Show managed FortiSwitch flow information. diagnose switch-controller switch-info mirror Show managed FortiSwitch mirror information. diagnose switch-controller switch-info ip-source-guard Show managed FortiSwitch source guard information in hardware. diagnose switch-controller switch-info rpvst Show managed FortiSwitch STP port information when inter-operating with rapid PVST network. execute switch-controller get-conn-status \u0026lt;FortiSwitch-SN\u0026gt; Show FortiSwitch connection status. execute switch-controller get-physical-conn standard \u0026lt;FortiSwitch-SN\u0026gt; Show FortiLink connectivity graph. execute switch-controller diagnose-connection \u0026lt;FortiSwitch-SN\u0026gt; Show FortiSwitch connection diagnostics. Managed FortiAPs # Command Description diagnose wireless-controller wlac -c wtp Show information about the FortiAP devices. diagnose wireless-controller wlac -d wtp diagnose wireless-controller wlac -c sta Show information about the wireless clients connected to the FortiAP devices. diagnose wireless-controller wlac -d sta diagnose wireless-controller wlac help Show a list of debug options available for the wireless controller. diagnose wireless-controller wlac sta_filter Start real-time debugging of a wireless client/station that connects to the FortiAP. diagnose wireless-controller wlac sta_filter clear diagnose wireless-controller wlac sta_filter \u0026lt;aa:bb:cc:dd:ee:ff\u0026gt; 255 diagnose debug enable diagnose wireless-controller wlac -c vap Show virtual access point information, including its MAC address, BSSID, SSID, the interface name, and the IP address of the APs that are broadcasting it. diagnose wireless-controller wlac wtp_filter Show the wireless termination point (WTP), or FortiAP, debugging on the wireless controller if FortiAP is failing to connect to FortiGate. diagnose wireless-controller wlac wtp_filter clear diagnose wireless-controller wlac wtp_filter \u0026lt;FAP-SN\u0026gt; 0-\u0026lt;x.x.x.x\u0026gt;:5246 255 diagnose debug application cw_acd 0x7ff Other Services # High Availability # Command Description diagnose system ha status Show HA status and information. get system ha status execute ha manage \u0026lt;index\u0026gt; \u0026lt;username\u0026gt; Log into and manage a specific HA member. diagnose sys ha checksum cluster Show checksum information of all cluster members. diagnose sys ha checksum show \u0026lt;vdom\u0026gt; Show detailed checksum information for a VDOM. diagnose sys ha checksum recalculate Recalculate HA checksums. diagnose sys ha recalculate-extfile-signature Recalculate HA external files signatures. diagnose sys ha reset-uptime Reset the HA uptime. This is used to test failover. diagnose debug application hatalk -1 Start real-time debugging of HA daemons. diagnose debug application hasync -1 diagnose debug application harelay -1 diagnose debug enable diagnose sys ha history read Show HA history. execute ha synchronize stop Manually start and stop HA synchronization. execute ha synchronize start ZTNA # Command Description diagnose endpoint fctems test-connectivity \u0026lt;EMS\u0026gt; Test FortiGate to FortiClient EMS connectivity. execute fctems verify \u0026lt;EMS\u0026gt; Verify FortiClient EMS’s certificate. diagnose test application fcnacd 2 Show EMS connectivity information. diagnose debug application fcnacd -1 Start real-time debugging of FortiClient NAC daemon. diagnose debug enable diagnose endpoint record list \u0026lt;ip\u0026gt; Show the endpoint record list. Optionally, filter by the endpoint IP address. diagnose endpoint wad-comm find-by uid \u0026lt;uid\u0026gt; Query endpoints by client UID. diagnose endpoint wad-comm find-by ip-vdom \u0026lt;ip\u0026gt; \u0026lt;vdom\u0026gt; Query endpoints by the client IP-VDOM pair. diagnose wad dev query-by uid \u0026lt;uid\u0026gt; Query from WAD diagnose command by UID. diagnose wad dev query-by ipv4 \u0026lt;ip\u0026gt; Query from WAD diagnose command by IP address. diagnose firewall dynamic list Show EMS ZTNA tags and all dynamic IP and MAC addresses. diagnose test application fcnacd 7 Show the FortiClient NAC daemon ZTNA and route cache. diagnose test application fcnacd 8 diagnose wad debug display pid enable Start real-time debugging of the traffic processed by WAD daemon. diagnose wad filter \u0026lt;filter\u0026gt; diagnose wad filter list diagnose wad debug enable level \u0026lt;level\u0026gt; diagnose wad debug enable category \u0026lt;category\u0026gt; diagnose debug enable Logging # Command Description diagnose log test Generate logs for testing. execute log filter \u0026lt;filter\u0026gt; Set log filters. execute log filter Show log filters. exec log display Show filtered logs. execute log delete Delete filtered logs. diagnose debug application miglogd -1 Start real-time debugging of logging process miglogd. diagnose debug enable execute log fortianalyzer test-connectivity Test connectivity between FortiGate and FortiAnalyzer. Traffic Shaping # Command Description diagnose firewall shaper traffic-shaper list Show configured traffic shapers. diagnose firewall shaper traffic-shaper stats list Show traffic shaper statistics. SIP Session Helper # Command Description diagnose sys sip status Show SIP status. diagnose sys sip mapping list Show SIP mapping list. diagnose sys sip dialog list Show SIP dialogue list. diagnose debug application sip -1 Start real-time SIP debugging. diagnose debug enable SIP ALG # Command Description diagnose sys sip-proxy calls list Show list of active SIP proxy calls. diagnose sys sip-proxy stats Show SIP proxy statistics. diagnose sys sip-proxy session list Show SIP proxy session list. diagnose debug application sip -1 Start real-time SIP debugging. diagnose debug enable Source # FortiGate - CLI Cheat Sheet ","date":"2024-08-22","externalUrl":null,"permalink":"/docs/commands-fortigate/","section":"Docs","summary":"","title":"Commands (FortiGate)","type":"docs"},{"content":"","date":"2024-08-22","externalUrl":null,"permalink":"/categories/fortios/","section":"Categories","summary":"","title":"FortiOS","type":"categories"},{"content":" Common Commands # Initial Network Scan # Real World Environment Scan (less noisy):\nnmap -T1 -A -v -Pn -oN nmap.txt X.X.X.X Lab Environment Scan (very noisy):\nnmap -T5 -A -v -Pn -oN nmap.txt X.X.X.X Vulnerability Script Scan # Vulnerability Scan on Target:\nnmap -Pn --script vuln X.X.X.X Usage \u0026amp; Flags # [!example]- Target Specification\n[!info]- Scan a single IP └──\u0026gt; nmap 192.168.1.1\n[!info]- Scan specific IPs └─\u0026gt; nmap 192.168.1.1 192.168.2.1\n[!info]- Scan a range └─\u0026gt; nmap 192.168.1.1-254\n[!info]- Scan a domain └─\u0026gt; nmap scanme.nmap.org\n[!info]- Scan using CIDR notation └─\u0026gt; nmap 192.168.1.0/24\n[!info]- Scan targets from a file ├─\u0026gt; -iL └──\u0026gt; nmap -iL targets.txt\n[!info]- Scan 100 random hosts ├─\u0026gt; -iR └──\u0026gt; nmap -iR 100\n[!info]- Exclude listed hosts ├─\u0026gt; -exclude └──\u0026gt; nmap -exclude 192.168.1.1\n[!example]- Nmap Scan Techniques\n[!info]- TCP SYN port scan (Default) ┌─\u0026gt; -sS └──\u0026gt; nmap 192.168.1.1 -sS\n[!info]- TCP connect port scan (Default without root privilege) ┌─\u0026gt; -sT └──\u0026gt; nmap 192.168.1.1 -sT\n[!info]- UDP port scan ┌─\u0026gt; -sU └──\u0026gt; nmap 192.168.1.1 -sU\n[!info]- TCP ACK port scan ┌─\u0026gt; -sA └──\u0026gt; nmap 192.168.1.1 -sA\n[!info]- TCP Window port scan ┌─\u0026gt; -sW └──\u0026gt; nmap 192.168.1.1 -sW\n[!info]- TCP Maimon port scan ┌─\u0026gt; -sM └──\u0026gt; nmap 192.168.1.1 -sM\n[!example]- Host Discovery\n[!info]- No Scan. List targets only ┌─\u0026gt; -sL └──\u0026gt; nmap 192.168.1.1-3 -sL\n[!info]- Disable port scanning. Host discovery only. ┌─\u0026gt; -sn └──\u0026gt; `nmap 192.168.1.1/24 -sn\n[!info]- Disable host discovery. Port scan only. ┌─\u0026gt; -Pn └──\u0026gt; nmap 192.168.1.1-5 -Pn\n[!info]- TCP SYN discovery on port x. Port 80 by default ┌─\u0026gt; -PS └──\u0026gt;nmap 192.168.1.1-5 -PS22-25,80\n[!info]- TCP ACK discovery on port x. Port 80 by default ┌─\u0026gt; -PA └──\u0026gt; nmap 192.168.1.1-5 -PA22-25,80\n[!info]- UDP discovery on port x. Port 40125 by default ┌─\u0026gt; -PU └──\u0026gt; nmap 192.168.1.1-5 -PU53\n[!info]- ARP discovery on local network ┌─\u0026gt; -PR └──\u0026gt; nmap 192.168.1.1-1/24 -PR\n[!info]- Never do DNS resolution ┌─\u0026gt; -n └──\u0026gt; nmap 192.168.1.1 -n\n[!example]- Port Specification\n[!info]- Port scan for port x ┌─\u0026gt; -p └──\u0026gt;nmap 192.168.1.1 -p 21\n[!info]- Port range ┌─\u0026gt; -p └──\u0026gt; nmap 192.168.1.1 -p 21-100\n[!info]- Port scan multiple TCP and UDP ports ┌─\u0026gt; -p └──\u0026gt; nmap 192.168.1.1 -p U:53,T:21-25,80\n[!info]- Port scan all ports ┌─\u0026gt; -p └──\u0026gt;nmap 192.168.1.1 -p-\n[!info]- Port scan from service name ┌─\u0026gt; -p └──\u0026gt; nmap 192.168.1.1 -p http,https\n[!info]- Fast port scan (100 ports) ┌─\u0026gt; -F └──\u0026gt; nmap 192.168.1.1 -F\n[!info]- Port scan the top x ports ┌─\u0026gt; -top-ports └──\u0026gt; nmap 192.168.1.1 -top-ports 2000\n[!info]- Leaving off initial port in range makes the scan start at port 1 ┌─\u0026gt; -p-65535 └──\u0026gt; nmap 192.168.1.1 -p-65535\n[!info]- Leaving off end port in range makes the scan go through to port 65535 ┌─\u0026gt; -p0- └──\u0026gt; nmap 192.168.1.1 -p0-\n[!example]- Service and Version Detection\n[!info]- Attempts to determine the version of the service running on port ┌─\u0026gt; -sV └──\u0026gt; nmap 192.168.1.1 -sV\n[!info]- Intensity level 0 to 9. Higher number increases possibility of correctness ┌─\u0026gt; -sV -version-intensity └──\u0026gt; nmap 192.168.1.1 -sV -version-intensity 8\n[!info]- Enable light mode. Lower possibility of correctness. Faster ┌─\u0026gt; -sV -version-light └──\u0026gt; nmap 192.168.1.1 -sV -version-light\n[!info]- Enable intensity level 9. Higher possibility of correctness. Slower ┌─\u0026gt; -sV -version-all └──\u0026gt; nmap 192.168.1.1 -sV -version-all\n[!info]- Enables OS detection, version detection, script scanning, and traceroute ┌─\u0026gt; -A └──\u0026gt;nmap 192.168.1.1 -A\n[!example]- OS Detection\n[!info]- Remote OS detection using TCP/IP stack fingerprinting ┌─\u0026gt; -O └──\u0026gt; nmap 192.168.1.1 -O\n[!info]- If at least one open and one closed TCP port are not found it will not try OS detection against host ┌─\u0026gt; -O -osscan-limit └──\u0026gt; nmap 192.168.1.1 -O -osscan-limit\n[!info]- Makes Nmap guess more aggressively ┌─\u0026gt; -O -osscan-guess └──\u0026gt; nmap 192.168.1.1 -O -osscan-guess\n[!info]- Set the maximum number x of OS detection tries against a target ┌─\u0026gt; -O -max-os-tries └──\u0026gt; nmap 192.168.1.1 -O -max-os-tries 1\n[!info]- Enables OS detection, version detection, script scanning, and traceroute ┌─\u0026gt; -A └──\u0026gt; nmap 192.168.1.1 -A\n[!example]- Timing and Performance\n[!info]- Paranoid (0) Intrusion Detection System evasion ┌─\u0026gt; -T0 └──\u0026gt; nmap 192.168.1.1 -T0\n[!info]- Sneaky (1) Intrusion Detection System evasion ┌─\u0026gt; -T1 └──\u0026gt; nmap 192.168.1.1 -T1\n[!info]- Polite (2) slows down the scan to use less bandwidth and use less target machine resources ┌─\u0026gt; -T2 └──\u0026gt; n\u0026gt;\u0026gt;map 192.168.1.1 -T2\n[!info]- Normal (3) which is default speed ┌─\u0026gt; -T3 └──\u0026gt; nmap 192.168.1.1 -T3\n[!info]- Aggressive (4) speeds scans; assumes you are on a reasonably fast and reliable network ┌─\u0026gt; -T4 └──\u0026gt; nmap 192.168.1.1 -T4\n[!info]- Insane (5) speeds scan; assumes you are on an extraordinarily fast network ┌─\u0026gt; -T5 └──\u0026gt; nmap 192.168.1.1 -T5\n[!example]- Timing and Performance Switches\n[!info]- Give up on target after this long ┌─\u0026gt; -host-timeout ├──\u0026gt; 1s; 4m; 2h └───\u0026gt;nmap -host-timeout 4m\n[!info]- Specifies probe round trip time ┌─\u0026gt; -min-rtt-timeout / max-rtt-timeout / initial-rtt-timeout ├──\u0026gt; 1s; 4m; 2h └───\u0026gt; nmap -min-rtt-timeout 1s\n[!info]- Parallel host scan group sizes ┌─\u0026gt; -min-hostgroup / max-hostgroup ├──\u0026gt; 50; 1024 └───\u0026gt; nmap -min-hostgroup 50\n[!info]- Probe parallelization ┌─\u0026gt; -min-parallelism / max-parallelism ├──\u0026gt; 10; 1 └───\u0026gt; nmap -min-parallelism 10\n[!info]- Specify the maximum number of port scan probe retransmissions ┌─\u0026gt; -max-retries ├──\u0026gt; 3 └───\u0026gt; nmap -max-retries 3\n[!info]- Send packets no slower than per second ┌─\u0026gt; -min-rate ├──\u0026gt; 100 └───\u0026gt; nmap -min-rate 100\n[!info]- Send packets no faster than per second ┌─\u0026gt; -max-rate ├──\u0026gt; 100 └───\u0026gt; nmap -max-rate 100\n[!example]- NSE Scripts\n[!info]- Scan with default NSE scripts. Considered useful for discovery and safe ┌─\u0026gt; -sC └──\u0026gt; nmap 192.168.1.1 -sC\n[!info]- Scan with default NSE scripts. Considered useful for discovery and safe ┌─\u0026gt; -script default └──\u0026gt; nmap 192.168.1.1 -script default\n[!info]- Scan with a single script. Example banner ┌─\u0026gt; -script └──\u0026gt; nmap 192.168.1.1 -script=banner\n[!info]- Scan with a wildcard. Example http ┌─\u0026gt; -script └──\u0026gt; nmap 192.168.1.1 -script=http*\n[!info]- Scan with two scripts. Example http and banner ┌─\u0026gt; -script └──\u0026gt; nmap 192.168.1.1 -script=http,banner\n[!info]- Scan default, but remove intrusive scripts ┌─\u0026gt; -script └──\u0026gt; nmap 192.168.1.1 -script \u0026quot;not intrusive\u0026quot;\n[!info]- NSE script with arguments ┌─\u0026gt; -script-args └───\u0026gt; nmap -script snmp-sysdescr -script-args snmpcommunity=admin 192.168.1.1\n[!example]- Useful NSE Script Examples\n[!info]- Http site map generator └─\u0026gt; nmap -Pn -script=http-sitemap-generator scanme.nmap.org\n[!info]- Fast search for random web servers └─\u0026gt; nmap -n -Pn -p 80 -open -sV -vvv -script banner,http-title -iR 1000\n[!info]- Brute forces DNS hostnames guessing subdomains └─\u0026gt; nmap -Pn -script=dns-brute domain.com\n[!info]- Safe SMB scripts to run └─\u0026gt; nmap -n -Pn -vv -O -sV -script smb-enum,smb-ls,smb-mbenum,smb-os-discovery,smb-s,smb-vuln,smbv2 -vv 192.168.1.1\n[!info]- Whois query └─\u0026gt; nmap -script whois* domain.com\n[!info]- Detect cross site scripting vulnerabilities └─\u0026gt; nmap -p80 -script http-unsafe-output-escaping scanme.nmap.org\n[!info]- Check for SQL injections └─\u0026gt; nmap -p80 -script http-sql-injection scanme.nmap.org\n[!example]- Firewall / IDS Evasion and Spoofing\n[!info]- Requested scan (including ping scans) use tiny fragmented IP packets. Harder for packet filters ┌─\u0026gt; -f └──\u0026gt; nmap 192.168.1.1 -f\n[!info]- Set your own offset size ┌─\u0026gt; -mtu └──\u0026gt; nmap 192.168.1.1 -mtu 32\n[!info]- Send scans from spoofed IPs ┌─\u0026gt; -D └──\u0026gt; nmap -D 192.168.1.101,192.168.1.102,192.168.1.103,192.168.1.23 192.168.1.1\n[!tip]- Explained nmap -D decoy-ip1,decoy-ip2,your-own-ip,decoy-ip3,decoy-ip4 remote-host-ip\n[!info]- Scan Facebook from Microsoft (-e eth0 -Pn may be required) ┌─\u0026gt; -S └──\u0026gt; nmap -S www.microsoft.com www.facebook.com\n[!info]- Use given source port number ┌─\u0026gt; -g └──\u0026gt; nmap -g 53 192.168.1.1\n[!info]- Relay connections through HTTP/SOCKS4 proxies ┌─\u0026gt; -proxies └──\u0026gt; nmap -proxies http://192.168.1.1:8080, http://192.168.1.2:8080 192.168.1.1\n[!info]- Appends random data to sent packets ┌─\u0026gt; -data-length └──\u0026gt; nmap -data-length 200 192.168.1.1\nExample of IDS Evasion command :\nnmap -f -t 0 -n -Pn \u0026ndash;data-length 200 -D\n192.168.1.101,192.168.1.102,192.168.1.103,192.168.1.23 192.168.1.1\n[!example]- Output\n[!info]- Normal output to the file normal.file ┌─\u0026gt; -oN └──\u0026gt; nmap 192.168.1.1 -oN normal.file\n[!info]- XML output to the file xml.file ┌─\u0026gt; -oX └──\u0026gt; nmap 192.168.1.1 -oX xml.file\n[!info]- Grepable output to the file grep.file ┌─\u0026gt; -oG └──\u0026gt; nmap 192.168.1.1 -oG grep.file\n[!info]- Output in the three major formats at once ┌─\u0026gt; -oA └──\u0026gt; nmap 192.168.1.1 -oA results\n[!info]- Grepable output to screen. -oN -, -oX - also usable ┌─\u0026gt; -oG - └──\u0026gt; nmap 192.168.1.1 -oG -\n[!info]- Append a scan to a previous scan file ┌─\u0026gt; -append-output └──\u0026gt; nmap 192.168.1.1 -oN file.file -append-output\n[!info]- Increase the verbosity level (use -vv or more for greater effect) ┌─\u0026gt; -v └──\u0026gt; nmap 192.168.1.1 -v\n[!info]- Increase debugging level (use -dd or more for greater effect) ┌─\u0026gt; -d └──\u0026gt; nmap 192.168.1.1 -d\n[!info]- Display the reason a port is in a particular state, same output as -vv ┌─\u0026gt; -reason └──\u0026gt; nmap 192.168.1.1 -reason\n[!info]- Only show open (or possibly open) ports ┌─\u0026gt; -open └──\u0026gt; nmap 192.168.1.1 -open\n[!info]- Show all packets sent and received ┌─\u0026gt; -packet-trace └──\u0026gt; nmap 192.168.1.1 -T4 -packet-trace\n[!info]- Shows the host interfaces and routes ┌─\u0026gt; -iflist └──\u0026gt; nmap -iflist\n[!info]- Resume a scan ┌─\u0026gt; -resume └──\u0026gt; nmap -resume results.file\n[!example]- Helpful Nmap Output examples\n[!info]- Scan for web servers and grep to show which IPs are running web servers └─\u0026gt; nmap -p80 -sV -oG - -open 192.168.1.1/24 | grep open\n[!info]- Generate a list of the IPs of live hosts └─\u0026gt; nmap -iR 10 -n -oX out.xml | grep \u0026quot;Nmap\u0026quot; | cut -d \u0026quot; \u0026quot; -f5 \u0026gt; live-hosts.txt\n[!info]- Append IP to the list of live hosts └─\u0026gt; nmap -iR 10 -n -oX out2.xml | grep \u0026quot;Nmap\u0026quot; | cut -d \u0026quot; \u0026quot; -f5 \u0026gt;\u0026gt; live-hosts.txt\n[!info]- Compare output from nmap using the ndif └─\u0026gt; ndiff scanl.xml scan2.xml\n[!info]- Convert nmap xml files to html files └─\u0026gt; xsltproc nmap.xml -o nmap.html\n[!info]- Reverse sorted list of how often ports turn up └─\u0026gt; grep \u0026quot; open \u0026quot; results.nmap | sed -r 's/ +/ /g' | sort | uniq -c | sort -rn | less\n[!example]- Miscellaneous Nmap Flags\n[!info]- Enable IPv6 scanning ┌─\u0026gt;-6 └──\u0026gt; nmap -6 2607:f0d0:1002:51::4\n[!info]- nmap help screen ┌─\u0026gt; -h └──\u0026gt; nmap -h\n[!example]- Other Useful Nmap Commands\n[!info]- Discovery only on ports x, no port scan └─\u0026gt; nmap -iR 10 -PS22-25,80,113,1050,35000 -v -sn\n[!info]- ARP discovery only on local network, no port scan └─\u0026gt; nmap 192.168.1.1-1/24 -PR -sn -vv\n[!info]- Traceroute to random targets, no port scan └─\u0026gt; nmap -iR 10 -sn -traceroute\n[!info]- Query the Internal DNS for hosts, list targets only └─\u0026gt; nmap 192.168.1.1-50 -sL -dns-server 192.168.1.1\n[!info]- Show the details of the packets that are sent and received during a scan and capture the traffic └─\u0026gt; nmap 192.168.1.1 --packet-trace\n","date":"2024-08-22","externalUrl":null,"permalink":"/docs/nmap/","section":"Docs","summary":"","title":"Nmap","type":"docs"},{"content":"# EVERYTHING BELOW HERE IS CUSTOM/USER MADE # TAMPER WITH EVERYTHING ABOVE AT YOUR OWN RISK # Start fastfetch #fastfetch # Clears Bash/Zsh History #echo \u0026#34;\u0026#34; \u0026gt; ~/.bash_history #echo \u0026#34;\u0026#34; \u0026gt; ~/.zsh_history # \u0026#34;-c\u0026#34; for Bash and \u0026#34;-p\u0026#34; for Zsh (may need to adjust history alias if errors show up) #history -c #history -p # Export Environment Variables (only if running code, not code-oss) #export DONT_PROMPT_WSL_INSTALL=1 #export PATH=$PATH:~/.local/bin #use this if installing pwncat-cs in Kali ","date":"2024-08-22","externalUrl":null,"permalink":"/docs/rc-bashandzsh/","section":"Docs","summary":"","title":"RCs - bash \u0026 zsh","type":"docs"},{"content":"","date":"2024-08-22","externalUrl":null,"permalink":"/categories/windows/","section":"Categories","summary":"","title":"Windows","type":"categories"},{"content":" Format Drive (if unable to find valid Drive/Disk) # Open Command Prompt and type:\ndiskpart list disk select disk NUMOFDISK NOTE: BELOW THIS POINT, THESE COMMANDS WILL WIPE THE CONTENTS OF THE DRIVE\nclean create partition primary assign letter=LETTER format fs=ntfs quick When Choosing Windows 11 Type # Press Shift + F10 to open Command Prompt.\nType:\nregedit Navigate to HKEY_LOCAL_MACHINE/SYSTEM/SETUP\nCreate a folder named LabConfig.\nCreate DWORD entries for all files and set their values to 1:\nBypassTPMCheck BypassRAMCheck BypassSecureBootCheck Exit the Registry Editor.\nBypass Microsoft Account # Note: Since Microsoft patched this out in KB5054687, see below for current working method (credit to the-P1neapple)\n1. Press Shift + F10 to open Command Prompt.\n2. Type:\n```c++ oobe\\\\bypassnro ``` Press Shift + F10 or Ctrl + Shift + J to open console Type: start ms-cxh:localonly Or:\nWinJS.Application.restart(\u0026#34;ms-cxh://LOCALONLY\u0026#34;) Source # the-P1neapple - WinJS-Microsoft-Account-Bypass ","date":"2024-08-22","externalUrl":null,"permalink":"/docs/windows11-bypass/","section":"Docs","summary":"","title":"Windows 11 - Bypass","type":"docs"},{"content":" Ram Clear Cache # Create a new shortcut and enter the following path:\n%windir%\\\\system32\\\\rundll32.exe advapi32.dll,ProcessIdleTasks Mini-Tray Clear Duplicates (Batch) # Open Command Prompt and type:\nreg.exe delete \u0026#34;HKCU\\\\Control Panel\\\\NotifyIconSettings\u0026#34; /f You may need to restart Windows Explorer (it should do it automatically).\nSet Administrator Active # Open Terminal as Administrator.\nType:\nnet user Administrator /active:yes To disable, set \u0026ldquo;yes\u0026rdquo; to \u0026ldquo;no\u0026rdquo;.\nSet password:\nnet user administrator * Install Software # Visit Ninite ","date":"2024-08-22","externalUrl":null,"permalink":"/docs/windows11-fixes-and-tweaks/","section":"Docs","summary":"","title":"Windows 11 - Fixes and Tweaks","type":"docs"},{"content":" Clear Terminal History # PATH: C:\\\\Users\\\\YOURUSERNAME\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\PowerShell\\\\PSReadLine\\\\ConsoleHost_history.txt\nCreate PROFILE PATH (reference output of below if one exists:) echo $PROFILE If environment doesn\u0026rsquo;t exist, create one like below Example: C:\\\\Users\\\\YOURUSERNAME\\\\Documents\\\\PowerShell\\\\Microsoft.PowerShell_profile.ps1 Add these commands to the file:\nClear-History echo \u0026#34;\u0026#34; \u0026gt; C:\\\\Users\\\\YOURUSERNAME\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\PowerShell\\\\PSReadLine\\\\ConsoleHost_history.txt Save the file and restart the shell or enter:\n. $PROFILE Install WinFetch # Install WinFetch:\nInstall-Script winfetch Install Oh-My-Posh # Install Oh-My-Posh:\nwinget install JanDeDobbeleer.OhMyPosh -s winget Install Nerd Font:\noh-my-posh font install meslo Make sure you change the font in terminal settings to MesloLGM Nerd Font\nSet this to $PROFILE:\noh-my-posh init pwsh --config \u0026#34;$env:POSH_THEMES_PATH\\\\jandedobbeleer.omp.json\u0026#34; | Invoke-Expression Recommend appending this to the top just in case this messes with anything:\n. $PROFILE Sources # WinFetch Installation\nOh-My-Posh Installation\n","date":"2024-08-22","externalUrl":null,"permalink":"/docs/windows11-powershell-tweaks/","section":"Docs","summary":"","title":"Windows 11 - PowerShell Tweaks","type":"docs"},{"content":"","date":"2024-08-06","externalUrl":null,"permalink":"/categories/cmd/","section":"Categories","summary":"","title":"CMD","type":"categories"},{"content":" Show General System Information (OS, Boot-time, Specs, NIC, Hyper-V Req) # systeminfo Hostname and Serial Number # Hostname: Shows hostname of computer\nhostname Serial Number: Shows S/N of computer\nwmic bios get serialnumber Ping # Continuous Ping\nping –t X.X.X.X Pull DNS info from Ping (alternatively, use nslookup)\nping –a X.X.X.X Ping a certain amount of packets (Example: 60 packets [good for flapping alerts])\nping X.X.X.X –n 60 Traceroute # Normal trace\ntracert X.X.X.X If unable to resolve hostname\ntracert X.X.X.X -d Shows Network Drives Connected to User # net use GPO # Shows all Group Policies for computer/user\ngpresult /r Update GPO\ngpupdate /force Computer Running Slow - SFC/DISM # Note: To save time (and patience), use this version of these commands\nsfc /scannow \u0026amp; sfc /scannow \u0026amp; DISM /Online /Cleanup-Image /RestoreHealth \u0026amp; sfc /scannow sfc /scannow; sfc /scannow; DISM /Online /Cleanup-Image /RestoreHealth; sfc /scannow sfc /scannow DISM /Online /Cleanup-Image /CheckHealth DISM /Online /Cleanup-Image /ScanHealth DISM /Online /Cleanup-Image /RestoreHealth Reboot\nDISM to Free-Up Space in WinSxS # DISM /online /Cleanup-Image /StartComponentCleanup Note: The above command does not seem to work in Backstage (may be able to test with user-specific session) IPConfig # Wipes DNS Cache in Windows\nipconfig /flushdns Renews IP Address (Will boot you off if remoted in)\nipconfig /release \u0026amp; ipconfig /renew -Shows IPv4, IPv6, DNS, etc.\nipconfig /all Find/Logoff User # query user logoff IDOFUSER Find/Reset Password # query user net user \u0026#39;USER\u0026#39; \u0026#39;PASS\u0026#39; Check for Email Domain on Server (PS) # Get-Recipient emailaddress@company.com Backstage Printers (PS) # Get-Printer | Format-Table If you only need the Name/Driver Name\nGet-Printer | Format-Table Name, DriverName Remove-Printer -Name \u0026#34;NAMEOFPRINTER\u0026#34; Get-PrinterDriver Remove-PrinterDriver -Name \u0026#34;NAMEOFDRIVER\u0026#34; Check Domain Connection (PS) # Test-ComputerSecureChannel -Verbose Active Directory Password Policy # Get-ADDefaultDomainPasswordPolicy Re-Add Computer to Domain (PS) # Reset-ComputerMachinePassword -Server {DomainController} -Credential {DomainAdmin} Example:\nReset-ComputerMachinePassword -Server lon-dc01 -Credential corp\\dsmith Check Route Table # netstat -r Clear ARP Table # arp -d * Can be used to solve connectivity issues internally Check Current Running Connections (at current time [will not update unless ran again]) # netstat -ano | findstr \u0026#34;443\u0026#34; Note: TCPLogView may be a useful tool for logging data over time Find \u0026amp; Cycle Network Adapter # PowerShell\nGet-NetAdapter | format-table Disable-NetAdapter -Name \u0026#34;\u0026lt;interface\u0026gt;\u0026#34; -Confirm:$false Enable-NetAdapter -Name \u0026#34;\u0026lt;interface\u0026gt;\u0026#34; -Confirm:$false Restart-NetAdapter CMD\nnetsh interface show interface netsh interface set interface INTERFACE disable netsh interface set interface INTERFACE enable Find TXT Records of Domain (example is DMARC) # nslookup -type=txt _dmarc.domain.com Note: This should work for other text records too if you know which one you\u0026rsquo;re looking for Get Current CPU Percentage (PS) # Get-CimInstance -ClassName win32_processor | Measure-Object -Property LoadPercentage –Average Install Appinstaller Package # Add-AppxPackage -Appinstaller \u0026lt;path-to-your-appinstaller-file\u0026gt; Sync Changes to Azure # This changes for all changed\nStart ADSyncSyncCycle This changes for a specific policy\nStart ADSyncSyncCycle –PolicyType delta Find FQDN (Fully Qualified Domain Name) of Host (PS) # [System.Net.Dns]::GetHostByName($env:COMPUTERNAME).HostName Find File (PS) # gci -r -fi \u0026#39;*.EXTENSION\u0026#39; Get and Restart Service (PS) # Get Service\nGet-Service -Name NAME Restart Service\nRestart-Service NAME Example: Restart Print Spooler\nRestart-Service Spooler Test Domain Trust Broker (PS) # Test-ComputerSecureChannel -Verbose If above is True, everything should be fine | If False, run the below command\nTest-ComputerSecureChannel -Repair -Credential (Get-Credential) Resync Time # net stop w32time \u0026amp;\u0026amp; w32tm /unregister \u0026amp;\u0026amp; w32tm /register \u0026amp;\u0026amp; net start w32time \u0026amp;\u0026amp; w32tm /resync \u0026amp;\u0026amp; tzutil /s \u0026#34;Eastern Standard Time\u0026#34; For a list of Time Zones, run:\ntzutil /l Open Network Routing Tables # route print Remove Folder/Files (PS) # Remove-Item FOLDERNAME/FILENAME See Storage Information of a Drive (PS) # Get-Volume C Can change \u0026ldquo;C\u0026rdquo; for other drive letters Download File Over HTTP # Invoke-WebRequest -Uri \u0026#34;http://example.com/file.zip\u0026#34; -OutFile \u0026#34;C:\\\\path\\\\to\\\\save\\\\file.zip\u0026#34; List Environment Variables # Get-ChildItem Env: ","date":"2024-08-06","externalUrl":null,"permalink":"/docs/commands-cmd-powershell/","section":"Docs","summary":"","title":"Commands (CMD, PowerShell)","type":"docs"},{"content":"","date":"2024-08-06","externalUrl":null,"permalink":"/categories/cryptography/","section":"Categories","summary":"","title":"Cryptography","type":"categories"},{"content":"","date":"2024-08-06","externalUrl":null,"permalink":"/categories/databases/","section":"Categories","summary":"","title":"Databases","type":"categories"},{"content":" Code-Breaking, Cipher and Logic Puzzle Solving Tools # CyberChef # Hashes # Decrypt MD5, SHA1, MySQL, NTLM, SHA256, MD5 Email, SHA256 Email, SHA512 hashes ","date":"2024-08-06","externalUrl":null,"permalink":"/docs/decoding-and-encoding/","section":"Docs","summary":"","title":"Decoding and Encoding Tools","type":"docs"},{"content":" Exploit Database - Exploits for Penetration Testers, Researchers, and Ethical Hackers (exploit-db.com) # HackTricks # GTFOBins # If you are looking for Windows binaries you should visit LOLBAS. # LOLBAS # The goal of the LOLBAS project is to document every binary, script, and library that can be used for Living Off The Land techniques. [Windows]\nStatic Binaries # Contains a bunch of statically-linked binaries of various tools, along with the Dockerfiles / other build scripts that can be used to build them. I generally just create these as I need them - not all tools are available for every platform or architecture.\n","date":"2024-08-06","externalUrl":null,"permalink":"/docs/exploit-tools/","section":"Docs","summary":"","title":"Exploit Tools","type":"docs"},{"content":"","date":"2024-08-06","externalUrl":null,"permalink":"/categories/exploits/","section":"Categories","summary":"","title":"Exploits","type":"categories"},{"content":" HTTP response status codes indicate whether a specific HTTP request has been successfully completed # Responses are grouped in five classes # 1. Informational responses (100 – 199) # 2. Successful responses (200 – 299) # 3. Redirection messages (300 – 399) # 4. Client error responses (400 – 499) # 5. Server error responses (500 – 599) # The status codes listed below are defined by RFC 9110 (click here for details on all HTTP specifications)\nIf you receive a response that is not in this list, it is a non-standard response, possibly custom to the server\u0026rsquo;s software.\n100 - Information responses # 100 Continue # This interim response indicates that the client should continue the request or ignore the response if the request is already finished. 101 Switching Protocols # This code is sent in response to an Upgraderequest header from the client and indicates the protocol the server is switching to. 102 Processing # This code indicates that the server has received and is processing the request, but no response is available yet. 103 Early Hints # This status code is primarily intended to be used with the Link header, letting the user agent start preloadingresources while the server prepares a response or preconnect to an origin from which the page will need resources. 200 - Successful responses # 200 --\u0026gt; OK # The request succeeded. The result meaning of \u0026ldquo;success\u0026rdquo; depends on the HTTP method:\nGET: The resource has been fetched and transmitted in the message body. HEAD: The representation headers are included in the response without any message body. PUT or POST: The resource describing the result of the action is transmitted in the message body. TRACE: The message body contains the request message as received by the server. 201 --\u0026gt; Created # The request succeeded, and a new resource was created as a result. This is typically the response sent after POST requests, or some PUT requests. 202 --\u0026gt; Accepted # The request has been received but not yet acted upon. It is noncommittal, since there is no way in HTTP to later send an asynchronous response indicating the outcome of the request. It is intended for cases where another process or server handles the request, or for batch processing. 203 --\u0026gt; Non-Authoritative Information # This response code means the returned metadata is not exactly the same as is available from the origin server, but is collected from a local or a third-party copy. This is mostly used for mirrors or backups of another resource. Except for that specific case, the 200 OK response is preferred to this status. 204 --\u0026gt; No Content # There is no content to send for this request, but the headers may be useful. The user agent may update its cached headers for this resource with the new ones. 205 --\u0026gt; Reset Content # Tells the user agent to reset the document which sent this request. 206 --\u0026gt; Partial Content # This response code is used when the Rangeheader is sent from the client to request only part of a resource. 207 --\u0026gt; Multi-Status # Conveys information about multiple resources, for situations where multiple status codes might be appropriate. 208 --\u0026gt; Already Reported # Used inside a \u0026lt;dav:propstat\u0026gt; response element to avoid repeatedly enumerating the internal members of multiple bindings to the same collection. 226 --\u0026gt; IM Used # The server has fulfilled aGET request for the resource, and the response is a representation of the result of one or more instance-manipulations applied to the current instance. 300 - Redirection messages # 300 --\u0026gt; Multiple Choices # The request has more than one possible response. The user agent or user should choose one of them. (There is no standardized way of choosing one of the responses, but HTML links to the possibilities are recommended so the user can pick.) 301 --\u0026gt; Moved Permanently # The URL of the requested resource has been changed permanently. The new URL is given in the response. 302 --\u0026gt; Found # This response code means that the URI of requested resource has been changed temporarily. Further changes in the URI might be made in the future. Therefore, this same URI should be used by the client in future requests. 303 --\u0026gt; See Other # The server sent this response to direct the client to get the requested resource at another URI with a GET request. 304 --\u0026gt; Not Modified # This is used for caching purposes. It tells the client that the response has not been modified, so the client can continue to use the same cached version of the response. 305 --\u0026gt; Use Proxy # Defined in a previous version of the HTTP specification to indicate that a requested response must be accessed by a proxy. It has been deprecated due to security concerns regarding in-band configuration of a proxy. 306 --\u0026gt; unused # This response code is no longer used; it is just reserved. It was used in a previous version of the HTTP/1.1 specification. 307 --\u0026gt; Temporary Redirect # The server sends this response to direct the client to get the requested resource at another URI with the same method that was used in the prior request. This has the same semantics as the 302 Found HTTP response code, with the exception that the user agent must not change the HTTP method used: if a POST was used in the first request, a POST must be used in the second request. 308 --\u0026gt; Permanent Redirect # This means that the resource is now permanently located at another URI, specified by the Location: HTTP Response header. This has the same semantics as the 301 Moved Permanently HTTP response code, with the exception that the user agent must not change the HTTP method used: if a POST was used in the first request, a POST must be used in the second request. 400 - Client error responses # 400 --\u0026gt; Bad Request # The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing). 401 --\u0026gt; Unauthorized # Although the HTTP standard specifies \u0026ldquo;unauthorized\u0026rdquo;, semantically this response means \u0026ldquo;unauthenticated\u0026rdquo;. That is, the client must authenticate itself to get the requested response. 402 --\u0026gt; Payment Required # This response code is reserved for future use. The initial aim for creating this code was using it for digital payment systems, however this status code is used very rarely and no standard convention exists. 403 --\u0026gt; Forbidden # The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client\u0026rsquo;s identity is known to the server. 404 --\u0026gt; Not Found # The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web. 405 --\u0026gt; Method Not Allowed # The request method is known by the server but is not supported by the target resource. For example, an API may not allow calling DELETE to remove a resource. 406 --\u0026gt; Not Acceptable # This response is sent when the web server, after performing server-driven content negotiation, doesn\u0026rsquo;t find any content that conforms to the criteria given by the user agent. 407 --\u0026gt; Proxy Authentication Required # This is similar to 401 Unauthorized but authentication is needed to be done by a proxy. 408 --\u0026gt; Request Timeout # This response is sent on an idle connection by some servers, even without any previous request by the client. It means that the server would like to shut down this unused connection. This response is used much more since some browsers, like Chrome, Firefox 27+, or IE9, use HTTP pre-connection mechanisms to speed up surfing. Also note that some servers merely shut down the connection without sending this message. 409 --\u0026gt; Conflict # This response is sent when a request conflicts with the current state of the server. 410 --\u0026gt; Gone # This response is sent when the requested content has been permanently deleted from server, with no forwarding address. Clients are expected to remove their caches and links to the resource. The HTTP specification intends this status code to be used for \u0026ldquo;limited-time, promotional services\u0026rdquo;. APIs should not feel compelled to indicate resources that have been deleted with this status code. 411 --\u0026gt; Length Required # Server rejected the request because the Content-Length header field is not defined and the server requires it. 412 --\u0026gt; Precondition Failed # The client has indicated preconditions in its headers which the server does not meet. 413 --\u0026gt; Payload Too Large # Request entity is larger than limits defined by server. The server might close the connection or return an Retry-After header field. 414 --\u0026gt; URI Too Long # The URI requested by the client is longer than the server is willing to interpret. 415 --\u0026gt; Unsupported Media Type # The media format of the requested data is not supported by the server, so the server is rejecting the request. 416 --\u0026gt; Range Not Satisfiable # The range specified by the Range header field in the request cannot be fulfilled. It\u0026rsquo;s possible that the range is outside the size of the target URI\u0026rsquo;s data. 417 --\u0026gt; Expectation Failed # This response code means the expectation indicated by the Expect request header field cannot be met by the server. 418 --\u0026gt; I'm a teapot # The server refuses the attempt to brew coffee with a teapot. 421 --\u0026gt; Misdirected Request # The request was directed at a server that is not able to produce a response. This can be sent by a server that is not configured to produce responses for the combination of scheme and authority that are included in the request URI. 422 --\u0026gt; Unprocessable Content # The request was well-formed but was unable to be followed due to semantic errors. 423 --\u0026gt; Locked # The resource that is being accessed is locked. 424 --\u0026gt; Failed Dependency # The request failed due to failure of a previous request. 425 --\u0026gt; Too Early # Indicates that the server is unwilling to risk processing a request that might be replayed. 426 --\u0026gt; Upgrade Required # The server refuses to perform the request using the current protocol but might be willing to do so after the client upgrades to a different protocol. The server sends an Upgrade header in a 426 response to indicate the required protocol(s). 428 --\u0026gt; Precondition Required # The origin server requires the request to be conditional. This response is intended to prevent the \u0026rsquo;lost update\u0026rsquo; problem, where a client GETs a resource\u0026rsquo;s state, modifies it and PUTs it back to the server, when meanwhile a third party has modified the state on the server, leading to a conflict. 429 --\u0026gt; Too Many Requests # The user has sent too many requests in a given amount of time (\u0026ldquo;rate limiting\u0026rdquo;). 431 --\u0026gt; Request Header Fields Too Large # The server is unwilling to process the request because its header fields are too large. The request may be resubmitted after reducing the size of the request header fields. 451 --\u0026gt; Unavailable For Legal Reasons # The user agent requested a resource that cannot legally be provided, such as a web page censored by a government. 500 - Server error responses # 500 --\u0026gt; Internal Server Error # The server has encountered a situation it does not know how to handle. 501 --\u0026gt; Not Implemented # The request method is not supported by the server and cannot be handled. The only methods that servers are required to support (and therefore that must not return this code) are GET and HEAD. 502 --\u0026gt; Bad Gateway # This error response means that the server, while working as a gateway to get a response needed to handle the request, got an invalid response. 503 --\u0026gt; Service Unavailable # The server is not ready to handle the request. Common causes are a server that is down for maintenance or that is overloaded. Note that together with this response, a user-friendly page explaining the problem should be sent. This response should be used for temporary conditions and the Retry-After HTTP header should, if possible, contain the estimated time before the recovery of the service. The webmaster must also take care about the caching-related headers that are sent along with this response, as these temporary condition responses should usually not be cached. 504 --\u0026gt; Gateway Timeout # This error response is given when the server is acting as a gateway and cannot get a response in time. 505 --\u0026gt; HTTP Version Not Supported # The HTTP version used in the request is not supported by the server. 506 --\u0026gt; Variant Also Negotiates # The server has an internal configuration error: the chosen variant resource is configured to engage in transparent content negotiation itself, and is therefore not a proper end point in the negotiation process. 507 --\u0026gt; Insufficient Storage # The method could not be performed on the resource because the server is unable to store the representation needed to successfully complete the request. 508 --\u0026gt; Loop Detected # The server detected an infinite loop while processing the request. 510 --\u0026gt; Not Extended # Further extensions to the request are required for the server to fulfill it. 511 --\u0026gt; Network Authentication Required # Indicates that the client needs to authenticate to gain network access. Source # developer.mozilla.org ","date":"2024-08-06","externalUrl":null,"permalink":"/docs/http-response-status-codes/","section":"Docs","summary":"","title":"HTTP Response Status Codes","type":"docs"},{"content":" Show All Databases # show dbs Show Current Database # db Create Or Switch Database # use acme Drop # db.dropDatabase() Create Collection # db.createCollection(\u0026#39;posts\u0026#39;) Show Collections # show collections Insert Row # db.posts.insert({ title: \u0026#39;Post One\u0026#39;, body: \u0026#39;Body of post one\u0026#39;, category: \u0026#39;News\u0026#39;, tags: [\u0026#39;news\u0026#39;, \u0026#39;events\u0026#39;], user: { name: \u0026#39;John Doe\u0026#39;, status: \u0026#39;author\u0026#39; }, date: Date() }) Insert Multiple Rows # db.posts.insertMany([ { title: \u0026#39;Post Two\u0026#39;, body: \u0026#39;Body of post two\u0026#39;, category: \u0026#39;Technology\u0026#39;, date: Date() }, { title: \u0026#39;Post Three\u0026#39;, body: \u0026#39;Body of post three\u0026#39;, category: \u0026#39;News\u0026#39;, date: Date() }, { title: \u0026#39;Post Four\u0026#39;, body: \u0026#39;Body of post three\u0026#39;, category: \u0026#39;Entertainment\u0026#39;, date: Date() } ]) Get All Rows # db.posts.find() Get All Rows Formatted # db.posts.find().pretty() Find Rows # db.posts.find({ category: \u0026#39;News\u0026#39; }) Sort Rows # # asc db.posts.find().sort({ title: 1 }).pretty() # desc db.posts.find().sort({ title: -1 }).pretty() Count Rows # db.posts.find().count() db.posts.find({ category: \u0026#39;news\u0026#39; }).count() Limit Rows # db.posts.find().limit(2).pretty() Chaining # db.posts.find().limit(2).sort({ title: 1 }).pretty() Foreach # db.posts.find().forEach(function(doc) { print(\u0026#34;Blog Post: \u0026#34; + doc.title) }) Find One Row # db.posts.findOne({ category: \u0026#39;News\u0026#39; }) Find Specific Fields # db.posts.find({ title: \u0026#39;Post One\u0026#39; }, { title: 1, author: 1 }) Update Row # db.posts.update({ title: \u0026#39;Post Two\u0026#39; }, { title: \u0026#39;Post Two\u0026#39;, body: \u0026#39;New body for post 2\u0026#39;, date: Date() }, { upsert: true }) Update Specific Field # db.posts.update({ title: \u0026#39;Post Two\u0026#39; }, { $set: { body: \u0026#39;Body for post 2\u0026#39;, category: \u0026#39;Technology\u0026#39; } }) Increment Field ($inc) # db.posts.update({ title: \u0026#39;Post Two\u0026#39; }, { $inc: { likes: 5 } }) Rename Field # db.posts.update({ title: \u0026#39;Post Two\u0026#39; }, { $rename: { likes: \u0026#39;views\u0026#39; } }) Delete Row # db.posts.remove({ title: \u0026#39;Post Four\u0026#39; }) Sub-Documents # db.posts.update({ title: \u0026#39;Post One\u0026#39; }, { $set: { comments: [ { body: \u0026#39;Comment One\u0026#39;, user: \u0026#39;Mary Williams\u0026#39;, date: Date() }, { body: \u0026#39;Comment Two\u0026#39;, user: \u0026#39;Harry White\u0026#39;, date: Date() } ] } }) Find By Element in Array ($elemMatch) # db.posts.find({ comments: { $elemMatch: { user: \u0026#39;Mary Williams\u0026#39; } } } ) Add Index # db.posts.createIndex({ title: \u0026#39;text\u0026#39; }) Text Search # db.posts.find({ $text: { $search: \u0026#34;\\\u0026#34;Post O\\\u0026#34;\u0026#34; } }) Greater \u0026amp; Less Than # db.posts.find({ views: { $gt: 2 } }) db.posts.find({ views: { $gte: 7 } }) db.posts.find({ views: { $lt: 7 } }) db.posts.find({ views: { $lte: 7 } }) ","date":"2024-08-06","externalUrl":null,"permalink":"/docs/mongodb/","section":"Docs","summary":"","title":"MongoDB Cheat Sheet","type":"docs"},{"content":" Shodan # Shodan is the world\u0026rsquo;s first search engine for Internet-connected devices. Discover how Internet intelligence can help you make better decisions.\ncrt.sh # Allows for searching SSL/TLS certificate history for a domain\n","date":"2024-08-06","externalUrl":null,"permalink":"/docs/information-gathering/","section":"Docs","summary":"","title":"Online Information Gathering Tools","type":"docs"},{"content":" Ports and their Services # Port Service Name Transport Protocol Description 7 Echo TCP, UDP Echo service 20 FTP-data TCP, SCTP File Transfer Protocol data transfer 21 FTP TCP, UDP, SCTP File Transfer Protocol (FTP) control connection 22 SSH-SCP TCP, UDP, SCTP Secure Shell, secure logins, file transfers (scp, sftp), and port forwarding 23 Telnet TCP Telnet protocol—unencrypted text communications 25 SMTP TCP Simple Mail Transfer Protocol, used for email routing between mail servers 53 DNS TCP, UDP Domain Name System name resolver 69 TFTP UDP Trivial File Transfer Protocol 80 HTTP TCP, UDP, SCTP Hypertext Transfer Protocol (HTTP) uses TCP in versions 1.x and 2. HTTP/3 uses QUIC, a transport protocol on top of UDP 88 Kerberos TCP, UDP Network authentication system 102 Iso-tsap TCP ISO Transport Service Access Point (TSAP) Class 0 protocol 110 POP3 TCP Post Office Protocol, version 3 (POP3) 135 Microsoft EPMAP TCP, UDP Microsoft EPMAP (End Point Mapper), also known as DCE/RPC Locator service, used to remotely manage services including DHCP server, DNS server, and WINS. Also used by DCOM 137 NetBIOS-ns TCP, UDP NetBIOS Name Service, used for name registration and resolution 138 NetBIOS-dgs TCP, UDP NetBIOS Datagram Service 139 NetBIOS-ssn TCP, UDP NetBIOS Session Service 143 IMAP4 TCP, UDP Internet Message Access Protocol (IMAP), management of electronic mail messages on a server 381 HP Openview TCP, UDP HP data alarm manager 383 HP Openview TCP, UDP HP performance data collector. 443 HTTP over SSL TCP, UDP, SCTP Hypertext Transfer Protocol Secure (HTTPS) uses TCP in versions 1.x and 2. HTTP/3 uses QUIC, a transport protocol on top of UDP. 445 SMB TCP Server Message Block 464 Kerberos TCP, UDP Kerberos Change/Set password 465 SMTP over TLS/SSL, SSM TCP Authenticated SMTP over TLS/SSL (SMTPS), URL Rendezvous Directory for SSM (Cisco protocol) 587 SMTP TCP Email message submission 593 Microsoft DCOM TCP, UDP HTTP RPC Ep Map, Remote procedure call over Hypertext Transfer Protocol, often used by Distributed Component Object Model services and Microsoft Exchange Server 636 LDAP over TLS/SSL TCP, UDP Lightweight Directory Access Protocol over TLS/SSL 691 MS Exchange TCP MS Exchange Routing 902 VMware Server unofficial VMware ESXi 989 FTP over SSL TCP, UDP FTPS Protocol (data), FTP over TLS/SSL 990 FTP over SSL TCP, UDP FTPS Protocol (control), FTP over TLS/SSL 993 IMAP4 over SSL TCP Internet Message Access Protocol over TLS/SSL (IMAPS) 995 POP3 over SSL TCP, UDP Post Office Protocol 3 over TLS/SSL 1025 Microsoft RPC TCP Microsoft operating systems tend to allocate one or more unsuspected, publicly exposed services (probably DCOM, but who knows) among the first handful of ports immediately above the end of the service port range (1024+). 1194 OpenVPN TCP, UDP OpenVPN 1337 WASTE unofficial WASTE Encrypted File Sharing Program 1589 Cisco VQP TCP, UDP Cisco VLAN Query Protocol (VQP) 1725 Steam UDP Valve Steam Client uses port 1725 2082 cPanel unofficial cPanel default 2083 radsec, cPanel TCP, UDP Secure RADIUS Service (radsec), cPanel default SSL 2483 Oracle DB TCP, UDP Oracle database listening for insecure client connections to the listener, replaces port 1521 2484 Oracle DB TCP, UDP Oracle database listening for SSL client connections to the listener 2967 Symantec AV TCP, UDP Symantec System Center agent (SSC-AGENT) 3074 XBOX Live TCP, UDP Xbox LIVE and Games for Windows – Live 3306 MySQL TCP MySQL database system 3724 World of Warcraft TCP, UDP Some Blizzard games, Unofficial Club Penguin Disney online game for kids 4664 Google Desktop unofficial Google Desktop Search 5432 PostgreSQL TCP PostgreSQL database system 5900 RFB/VNC Server TCP, UDP virtual Network Computing (VNC) Remote Frame Buffer RFB protocol 6665-6669 IRC TCP Internet Relay Chat . 6881 BitTorrent unofficial BitTorrent is part of the full range of ports used most often 6999 BitTorrent unofficial BitTorrent is part of the full range of ports used most often 6970 Quicktime unofficial QuickTime Streaming Server 8086 Kaspersky AV TCP Kaspersky AV Control Center 8087 Kaspersky AV UDP Kaspersky AV Control Center 8222 VMware Server TCP, UDP VMware Server Management User Interface (insecure Web interface). 9100 PDL TCP PDL Data Stream, used for printing to certain network printers. 10000 BackupExec unofficial Webmin, Web-based Unix/Linux system administration tool (default port) 12345 NetBus unofficial NetBus remote administration tool (often Trojan horse). 27374 Sub7 unofficial Sub7 default 31337 Back Orifice unofficial Back Orifice 2000 remote administration tools High-end Port Numbers: If you see higher-end port numbers that look really strange, they\u0026rsquo;re typically used in AWS as virtual ports (more back-end interfacing) i.e : 49663 or 49667\n","date":"2024-08-06","externalUrl":null,"permalink":"/docs/port-database/","section":"Docs","summary":"","title":"Port Database","type":"docs"},{"content":"","date":"2024-08-06","externalUrl":null,"permalink":"/categories/web/","section":"Categories","summary":"","title":"Web","type":"categories"},{"content":"","date":"2024-06-26","externalUrl":null,"permalink":"/categories/shells/","section":"Categories","summary":"","title":"Shells","type":"categories"},{"content":"Main website of fish: fish shell\nCan configure shell with fish_config command By itself, will open a browser to view/edit settings Able to use terminal commands instead if graphical interface is not possible/preferred Documentation site: fish-shell documentation\n","date":"2024-06-26","externalUrl":null,"permalink":"/docs/shell-fish/","section":"Docs","summary":"","title":"Shells - fish","type":"docs"},{"content":" 👨‍💻 Cyber Tinkerer | DevOps Automator | Web Minimalist | Some Sort of Nerd # \u0026ldquo;If it breaks, it bothers me; If it works, I find a way to break it\u0026rdquo; - Me 2025\nWELCOME TO MY WEBSITE!\n💼 What I Do Professionally # ⚙️ Automation: PowerShell, Bash, Python scripts are my bread and butter for most daily tasks 🌐 Web Development: Create static site posts with information I gather throughout my nerdy adventures 🚀 DevOps: Experiment with CI/CD pipelines, taking advantage of Linux toolkits, containerize services, and the cookie-crumb trail of version control 🌌 What I Do When Not Corporate # 🎮 Casual Strategy Gamer: Play a variety of strategy games (mostly Civ V, still is the best, @ me) 🎸 Guitarist: Mostly play metalcore songs, but if you\u0026rsquo;ve seen my Spotify playlist, you\u0026rsquo;ll find a bit more variety. Everything from Frank Sinatra to Mongolian Tuvan Throat Singing (didn\u0026rsquo;t even know that was what it was called until I found it) 🍿 Movie Nights With Family: Have a whole list of movies that I watch with my family every week in the attempt to stay cultured 🛠️ Messing Around Breaking Things: If I\u0026rsquo;m not gaming and strumming, I\u0026rsquo;m more than likely knee deep in a project that I was not forced to be in, but I\u0026rsquo;ll still complain about it 🔐 Researching Cyber Security Practices: Went to college for this, but I find doing some labs here-and-there is pretty fun 📡 Connect with Me # 📧 Email 🐙 GitHub ","externalUrl":null,"permalink":"/about/","section":"beforethesurge","summary":"","title":"About Me","type":"page"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"}]